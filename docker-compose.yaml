version: '3.8'

networks: 
    phonebook-network: 
        driver: bridge

services:
  directorydb:
    image: postgres:latest
    environment:
        POSTGRES_USER: pbdirectoryadmin
        POSTGRES_PASSWORD: Rr3+{=AC9cB&Jhj-n@8WG
        POSTGRES_DB: directorydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata_directorydb:/var/lib/postgresql/data
      - ./initsql_directorydb:/docker-entrypoint-initdb.d
    networks: 
        - phonebook-network

  reportdb:
    image: postgres:latest
    environment:
        POSTGRES_USER: pbreportadmin
        POSTGRES_PASSWORD: Rr3+{=AC9cB&Jhj-n@8WG
        POSTGRES_DB: reportdb
    ports:
      - "5435:5432"
    volumes:
      - pgdata_reportdb:/var/lib/postgresql/data
      - ./initsql_reportdb:/docker-entrypoint-initdb.d
    networks: 
        - phonebook-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks: 
        - phonebook-network

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "person-list-generate-topic:1:1,person-list-generated-topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
        - phonebook-network
  directorywebapi: 
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:5000
    build: 
        context: .
        dockerfile: ./Phonebook.Directory/Dockerfile 
    ports: 
        - "5000:8081"
    depends_on: 
        - directorydb 
        - kafka
    networks: 
        - phonebook-network

  reportwebapi: 
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ASPNETCORE_URLS=http://+:5001
    build: 
        context: .
        dockerfile: ./Phonebook.Report/Dockerfile 
    ports: 
        - "5001:8080"
    depends_on: 
        - reportdb 
        - kafka
    networks: 
        - phonebook-network

volumes:
  pgdata_directorydb:
  pgdata_reportdb:
